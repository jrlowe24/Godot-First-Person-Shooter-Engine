[gd_resource type="ShaderMaterial" load_steps=6 format=3 uid="uid://c7m2rwnlxs6g3"]

[ext_resource type="Texture2D" uid="uid://dg8jsm1ugl7i3" path="res://Assets/Weapons/Ak47/textures/AK_103_Base_Color.png" id="1_riqg6"]
[ext_resource type="Texture2D" uid="uid://bauqqp6c1n3yy" path="res://Assets/Weapons/Ak47/textures/AK_103_Metallic.png" id="2_y8ptl"]
[ext_resource type="Texture2D" uid="uid://bb4705ohn8o4a" path="res://Assets/Weapons/Ak47/textures/AK_103_Normal.png" id="3_q7dkm"]
[ext_resource type="Texture2D" uid="uid://ct4htuca63vje" path="res://Assets/Weapons/Ak47/textures/AK_103_Roughness.png" id="4_ehfix"]

[sub_resource type="Shader" id="Shader_qjsl6"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.2.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float fov = 47;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	
	float scale = 1.0 / tan(fov * 0.5 * PI / 180.0);
	PROJECTION_MATRIX[0][0] = scale / (VIEWPORT_SIZE.x / VIEWPORT_SIZE.y);
	PROJECTION_MATRIX[1][1] = -scale;
	
	POSITION = PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX.xyz, 1.0);
	POSITION.z = mix(POSITION.z, 0, .99);
}





void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
}
"

[resource]
resource_name = "Default_Material.001"
render_priority = 0
shader = SubResource("Shader_qjsl6")
shader_parameter/albedo = Color(0.735357, 0.735357, 0.735357, 0)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.58
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.31
shader_parameter/metallic = 1.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/fov = 47.0
shader_parameter/texture_albedo = ExtResource("1_riqg6")
shader_parameter/texture_metallic = ExtResource("2_y8ptl")
shader_parameter/texture_roughness = ExtResource("4_ehfix")
shader_parameter/texture_normal = ExtResource("3_q7dkm")
